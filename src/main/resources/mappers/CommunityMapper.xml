<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ep.dao.mapper.CommunityMapper">
	<resultMap id="userResult" type="User" extends="com.ep.dao.mapper.UserMapper.userResult" />
	
    <resultMap id="communityResult" type="Community">
        <id property="id" column="t_community_id"/>
        <result property="name" column="t_community_name"/>
        <result property="tag" column="t_community_tag"/>
        <result property="tips" column="t_community_tips"/>
        <result property="content" column="t_community_content"/>
        <result property="stationTotal" column="t_community_station_total"/>
        <result property="rentNum" column="t_community_rent_num"/>
        <result property="surplusNum" column="t_community_surplus_num"/>
        <result property="meetingNum" column="t_community_meeting_num"/>
        <result property="activityNum" column="t_community_activity_num"/>
        <result property="createdDate" column="t_community_created_date"/>
        <result property="updatedDate" column="t_community_updated_date"/>
        <result property="updatedById" column="t_community_updated_by_id"/>
        <result property="updatedByName" column="t_community_updated_by_name"/>
        <result property="online" column="t_community_is_online" jdbcType="CHAR" javaType="Bool"/>
    </resultMap>

    <resultMap id="deviceResult" type="Device">
        <id property="id" column="t_community_device_id"/>
        <result property="name" column="t_community_device_name"/>
        <result property="img" column="t_community_device_img"/>
        <result property="sequence" column="t_community_device_sequence"/>
        <result property="deleted" column="t_community_device_is_deleted" jdbcType="CHAR" javaType="Bool"/>
    </resultMap>

    <resultMap id="activityMeetingSpaceResult" type="ActivityMeetingSpace">
        <id property="id" column="t_activity_meeting_space_id"/>
        <result property="name" column="t_activity_meeting_space_name"/>
        <result property="img" column="t_activity_meeting_space_img"/>
        <result property="position" column="t_activity_meeting_space_position"/>
        <result property="capacity" column="t_activity_meeting_space_capacity"/>
        <result property="amount" column="t_activity_meeting_space_amount"/>
        <result property="type" column="t_activity_meeting_space_type"/>
        <result property="communityId" column="t_activity_meeting_space_community_id"/>
    </resultMap>

	<sql id="userColumns" >
		<include refid="com.ep.dao.mapper.UserMapper.userColumns"/>
	</sql>

    <sql id="communityColumns">
		c.id AS t_community_id,
		c.name AS t_community_name,
		c.tag AS t_community_tag,
		c.tips AS t_community_tips,
		c.content AS t_community_content,
		c.station_total AS t_community_station_total,
		c.rent_num AS t_community_rent_num,
		c.surplus_num AS t_community_surplus_num,
		c.meeting_num AS t_community_meeting_num,
		c.activity_num AS t_community_activity_num,
		c.created_date AS t_community_created_date,
		c.updated_date AS t_community_updated_date,
		c.updated_by_id AS t_community_updated_by_id,
		c.updated_by_name AS t_community_updated_by_name,
		c.is_online AS t_community_is_online
	</sql>

    <sql id="deviceColumns">
		u.id AS t_community_device_id,
		u.name AS t_community_device_name,
		u.img AS t_community_device_img,
		u.sequence AS t_community_device_sequence,
		u.is_deleted AS t_community_device_is_deleted
	</sql>

	<sql id="activityMeetingSpaceColumns">
		ams.id AS t_activity_meeting_space_id,
		ams.name AS t_activity_meeting_space_name,
		ams.img AS t_activity_meeting_space_img,
		ams.position AS t_activity_meeting_space_position,
		ams.capacity AS t_activity_meeting_space_capacity,
		ams.amount AS t_activity_meeting_space_amount,
		ams.type AS t_activity_meeting_space_type,
		ams.community_id AS t_activity_meeting_space_community_id
	</sql>

    <insert id="insertDevice"
		 parameterType="Device"
		 useGeneratedKeys="true"
		 keyProperty="id">
		INSERT INTO t_device(
			`name`,
			`img`,
			sequence,
			is_deleted
		) VALUES (
			#{name},
			#{img},
			#{sequence},
			#{deleted.code}
		)
	</insert>

	<update id="updateDevice" parameterType="Device">
		UPDATE t_device
		<set>
			<if test="img != null">
				img = #{img},
			</if>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="sequence != null">
				sequence = #{sequence},
			</if>
			<if test="deleted != null">
				is_deleted = #{deleted.code}
			</if>
		</set>
		WHERE id = #{id}
	</update>

	<select id="selectCommunityPictureByCommunityId" resultType="string">
		SELECT
			url
		FROM
			t_community_picture
		WHERE community_id = #{communityId}
	</select>

	<select id="selectCommunityDeviceByCommunityId" resultMap="deviceResult">
		SELECT
			<include refid="deviceColumns"/>
		FROM
			t_community_device cd
		INNER JOIN t_device u ON  u.id = cd.device_id
		WHERE cd.community_id = #{communityId} AND u.is_deleted = 'N'
	</select>

	<select id="selectCommunityUserByCommunityId" resultMap="userResult">
		SELECT
			<include refid="userColumns"/>
		FROM
			t_community_user cu
		INNER JOIN t_user u ON  u.id = cu.user_id
		WHERE cu.community_id = #{communityId} AND u.is_deleted = 'N'
	</select>

    <select id="selectCommunityById" resultMap="communityResult">
        SELECT
        	<include refid="communityColumns"/>
        FROM
			t_community c
		WHERE c.id = #{id}
    </select>

    <select id="selectCommunityList" resultMap="communityResult">
        SELECT
        <include refid="communityColumns"/>
        FROM
			t_community c
		<where>
			<if test="filter.online != null">
				c.is_online = #{filter.online.code}
			</if>
		</where>
		ORDER BY c.id DESC
        <if test="filter.start != null and filter.size != null">
            limit #{filter.start}, #{filter.size}
        </if>
    </select>

	<select id="countCommunityList" resultType="int">
		SELECT
			COUNT(*)
		FROM
			t_community c
		<where>
			<if test="filter.online != null">
				c.is_online = #{filter.online.code}
			</if>
		</where>
	</select>

    <select id="selectDeviceList" resultMap="deviceResult">
        SELECT
        <include refid="deviceColumns"/>
        FROM
			t_device u
		WHERE
			u.is_deleted = 'N'
		ORDER BY u.sequence ASC
        <if test="filter.start != null and filter.size != null">
            limit #{filter.start}, #{filter.size}
        </if>

    </select>

	<select id="countDeviceList" resultType="int">
		SELECT
			COUNT(*)
		FROM
			t_device
		WHERE
			is_deleted = 'N'
	</select>

	<select id="selectDeviceById" resultMap="deviceResult">
		SELECT
			<include refid="deviceColumns"/>
		FROM
			t_device u
		WHERE
			id= #{id}
	</select>
	
	<select id="countDeviceByName" resultType="int">
		SELECT
			COUNT(*)
		FROM
			t_device
		WHERE
			name= #{name}
		<if test="id != null">
			AND id != #{id}
		</if>
	</select>

	<select id="selectMaxDeviceSequence" resultType="int">
		SELECT
			if(MAX(sequence) IS NULL, 1,MAX(sequence) + 1)
		FROM
			`t_device`
	</select>

	<select id="selectDeviceBySequence" resultMap="deviceResult">
		SELECT
			<include refid="deviceColumns"/>
		FROM
		t_device u
		WHERE
			is_deleted = 'N'
		<if test="asc == true">
			AND sequence<![CDATA[ < ]]> #{sequence}
			ORDER BY sequence DESC
		</if>
		<if test="asc == false">
			AND sequence<![CDATA[ > ]]> #{sequence}
			ORDER BY sequence ASC
		</if>

		limit 1
	</select>

	<insert id="insertCommunity"
		parameterType="Community"
		useGeneratedKeys="true"
		keyProperty="id">
		INSERT INTO t_community(
			`name`,
			`tag`,
			`tips`,
			`content`,
			`updated_by_id`,
			`updated_by_name`,
			`created_date`,
			`updated_date`,
			`is_online`
		) VALUES (
			#{name},
			#{tag},
			#{tips},
			#{content},
			#{updatedById},
			#{updatedByName},
			NOW(),
			NOW(),
			'N'
		)
	</insert>

	<update id="updateCommunity" parameterType="Community">
		UPDATE t_community
		<set>
			<if test="name != null">
				`name` = #{name},
			</if>
			<if test="tag != null">
				`tag` = #{tag},
			</if>
			<if test="tips != null">
				tips = #{tips},
			</if>
			<if test="content != null">
				content = #{content},
			</if>
			<if test="updatedById != null">
				updated_by_id = #{updatedById},
			</if>
			<if test="updatedByName != null">
				updated_by_name = #{updatedByName},
			</if>
			<if test="online != null">
				is_online = #{online.code},
			</if>
			<if test="stationTotal != null">
				station_total = #{stationTotal},
			</if>
			<if test="rentNum != null">
				rent_num = #{rentNum},
			</if>
			<if test="surplusNum != null">
				surplus_num = #{surplusNum},
			</if>
			<if test="meetingNum != null">
				meeting_num = #{meetingNum},
			</if>
			<if test="activityNum != null">
				activity_num = #{activityNum},
			</if>
			updated_date = NOW()
		</set>
		WHERE id = #{id}
	</update>

	<delete id="batchDeleteCommunityDevice" parameterType="map">
		DELETE FROM t_community_device
		WHERE community_id = #{communityId}
	</delete>

	<delete id="batchDeleteCommunityUser" parameterType="map">
		DELETE FROM t_community_user
		WHERE community_id = #{communityId}
	</delete>

	<delete id="batchDeleteCommunityPicture" parameterType="map">
		DELETE FROM t_community_picture
		WHERE community_id = #{communityId}
	</delete>

	<insert id="batchInsertCommunityUser"
		parameterType="map">
		INSERT INTO t_community_user(
			`user_id`,
			`community_id`
		) VALUES
		<foreach collection="userIds" item="userId" index="index" separator=",">
			(#{userId},
			#{communityId})
		</foreach>
	</insert>

	<insert id="batchInsertCommunityDevice"
		parameterType="map">
		INSERT INTO t_community_device(
			`device_id`,
			`community_id`
		) VALUES
		<foreach collection="deviceIds" item="deviceId" index="index" separator=",">
			(#{deviceId},
			#{communityId})
		</foreach>
	</insert>

	<insert id="batchInsertCommunityPicture"
		parameterType="map">
		INSERT INTO t_community_picture(
			`url`,
			`community_id`
		) VALUES
		<foreach collection="pictures" item="picture" index="index" separator=",">
			(#{picture},
			#{communityId})
		</foreach>
	</insert>

	<select id="selectActivityMeetingSpaceById" resultMap="activityMeetingSpaceResult">
		SELECT
			<include refid="activityMeetingSpaceColumns"/>
		FROM
			t_activity_meeting_space ams
		WHERE
			ams.id = #{id}
	</select>

	<select id="selectActivityMeetingSpaceDevice" resultType="int">
		SELECT
			device_id
		FROM
			t_activity_meeting_space_device
		WHERE
			space_id = #{spaceId}
	</select>

	<select id="selectActivityMeetingSpaceList" resultMap="activityMeetingSpaceResult">
		SELECT
			<include refid="activityMeetingSpaceColumns"/>
		FROM
			t_activity_meeting_space ams
		WHERE
			ams.community_id = #{filter.communityId}
			AND ams.type = #{filter.type}
		ORDER BY ams.id ASC
		<if test="filter.start != null and filter.size != null">
			limit #{filter.start}, #{filter.size}
		</if>
	</select>

	<select id="countActivityMeetingSpaceList" resultType="int">
		SELECT
			COUNT(*)
		FROM
			t_activity_meeting_space ams
		WHERE
			ams.community_id = #{filter.communityId}
			AND ams.type = #{filter.type}
		ORDER BY ams.id ASC
	</select>

	<insert id="batchInsertActivityMeetingSpaceDevice"
			parameterType="map">
		INSERT INTO t_activity_meeting_space_device(
		`device_id`,
		`space_id`
		) VALUES
		<foreach collection="deviceIds" item="deviceId" index="index" separator=",">
			(#{deviceId},
			#{spaceId})
		</foreach>
	</insert>

	<delete id="batchDeleteActivityMeetingSpaceDevice" parameterType="map">
		DELETE FROM t_activity_meeting_space_device
		WHERE space_id = #{spaceId}
	</delete>

	<delete id="deleteActivityMeetingSpaceDevice" parameterType="map">
		DELETE FROM t_activity_meeting_space
		WHERE id = #{spaceId}
	</delete>

	<insert id="insertActivityMeetingSpace"
			parameterType="ActivityMeetingSpace"
			useGeneratedKeys="true"
			keyProperty="id">
		INSERT INTO t_activity_meeting_space(
			`name`,
			`position`,
			`img`,
			`capacity`,
			`amount`,
			`type`,
			`community_id`,
			`updated_by_id`,
			`updated_by_name`,
			`created_date`,
			`updated_date`
		) VALUES (
			#{name},
			#{position},
			#{img},
			#{capacity},
			#{amount},
			#{type},
			#{communityId},
			#{updatedById},
			#{updatedByName},
			NOW(),
			NOW()
		)
	</insert>

	<update id="updateActivityMeetingSpace" parameterType="ActivityMeetingSpace">
		UPDATE t_activity_meeting_space
		<set>
			<if test="name != null">
				`name` = #{name},
			</if>
			<if test="position != null">
				`position` = #{position},
			</if>
			<if test="img != null">
				img = #{img},
			</if>
			<if test="capacity != null">
				capacity = #{capacity},
			</if>
			<if test="updatedById != null">
				updated_by_id = #{updatedById},
			</if>
			<if test="updatedByName != null">
				updated_by_name = #{updatedByName},
			</if>
			<if test="amount != null">
				amount = #{amount},
			</if>
			<if test="type != null">
				`type` = #{type},
			</if>
			updated_date = NOW()
		</set>
		WHERE id = #{id}
	</update>

</mapper>